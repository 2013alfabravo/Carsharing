<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CarSharingTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2021-01-24T04:40:45" hostname="DESKTOP-8P93T89" time="0.319">
  <properties/>
  <testcase name="start" classname="CarSharingTest" time="0.319"/>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
?[1;31m
Start test 2?[0m
?[1;31m
Start test 3?[0m
?[1;31m
Start test 4?[0m
]]></system-out>
  <system-err><![CDATA[org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE COMPANY (ID INTEGER AUTO_INCREMENT PRIMARY KEY, NAME VARCHAR(255)) [42101-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:89)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.DBManager.run(Main.java:48)
	at carsharing.Main.main(Main.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:133)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$0(MainMethodExecutor.java:159)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
]]></system-err>
</testsuite>
